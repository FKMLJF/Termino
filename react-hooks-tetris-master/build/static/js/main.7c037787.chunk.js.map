{"version":3,"sources":["img/bg.png","components/styles/StyledTetris.js","gameHelpers.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","StyledTetrisWrapper","styled","div","_templateObject","bgImage","StyledTetris","_templateObject2","createStage","Array","from","fill","checkCollision","player","stage","_ref","moveX","x","moveY","y","tetromino","length","pos","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","_useState","useState","_useState2","Object","slicedToArray","setStage","_useState3","_useState4","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","concat","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","StyledStage_templateObject","props","height","width","StyledCell","StyledCell_templateObject","type","React","memo","react_default","a","createElement","Stage","components_Cell","key","StyledDisplay","StyledDisplay_templateObject","gameOver","Display","text","StyledStartButton","button","StartButton_templateObject","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","_useState5","_useState6","stop","setStop","_useState7","_useState8","stopText","setStopText","_useState9","_useState10","nextTermino","setnextTermino","_useState11","localStorage","getItem","_useState12","gamer","setGamer","_useState13","_useState14","start","setStart","_useState15","_useState16","error","setError","_usePlayer","setPlayer","termino","rotate","matrix","dir","mtrx","_","index","column","reverse","useCallback","newTerminoo","setItem","STAGE_WIDTH","objectSpread","clonedPlayer","JSON","parse","stringify","offset","usePlayer","_usePlayer2","updatePlayerPos","playerRotate","_useStage","_useStage2","_useGameStatus","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","_useGameStatus2","_useState17","_useState18","topUser","setTopUser","movePlayer","drop","axios","post","game","name","headers","Authorization","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","move","_ref2","keyCode","role","tabIndex","onKeyDown","e","onKeyUp","console","log","className","style","Table","striped","bordered","hover","item","i","components_Stage","components_Display","placeholder","disabled","onChange","target","components_StartButton","then","response","data","App","components_Tetris","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7c037787.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","import styled from 'styled-components';\n// BG Image\nimport bgImage from '../../img/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  // THIS IS SLOWER!!!\n  // return player.tetromino.some((row, y) =>\n  //   row.some((cell, x) => {\n  //     if (cell !== 0) {\n  //       return (\n  //         !stage[y + player.pos.y + moveY] ||\n  //         !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n  //         stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n  //           'clear'\n  //       );\n  //     }\n  //     return false;\n  //   })\n  // );\n\n  // Using for loops to be able to return (and break). Not possible with forEach\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1. Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2. Check that our move is inside the game areas height (y)\n          // That we're not go through bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // 3. Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4. Check that the cell wer'e moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n  // 5. If everything above is false\n  return false;\n};\n","export const TETROMINOS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n    shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n    color: '16, 226, 170',\n  },\n  J: { shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]], color: '36, 95, 223' },\n  L: {\n    shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n    color: '223, 173, 36',\n  },\n  O: { shape: [['O', 'O'], ['O', 'O']], color: '223, 217, 36' },\n  S: { shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]], color: '48, 211, 56' },\n  T: {\n    shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n    color: '132, 61, 198',\n  },\n  Z: { shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]], color: '227, 78, 78' },\n};\n\nexport const randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ';\n  const randTetromino =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n};\n","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n    const sweepRows = newStage =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, []);\n\n    const updateStage = prevStage => {\n      // First flush the stage\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n      );\n\n      // Then draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n      // Then check if we got some score if collided\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n\n    // Here are the updates\n    setStage(prev => updateStage(prev));\n  }, [\n    player.collided,\n    player.pos.x,\n    player.pos.y,\n    player.tetromino,\n    resetPlayer,\n  ]);\n\n  return [stage, setStage, rowsCleared];\n};\n","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`;\n","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  /* border-radius: 5px; */\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`;\n","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\n// React.memo makes sure we only re-render the changed cells\nconst Cell = ({ type }) => (\n\n  <StyledCell type={type} color={TETROMINOS[type].color}>\n\n  </StyledCell>\n);\n\nexport default React.memo(Cell);\n","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;\n","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n);\n\nexport default Display;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledStartButton = styled.button`\n  box-sizing: border-box;\n\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start </StyledStartButton>\n);\n\nexport default StartButton;\n","import React, {useEffect, useState} from 'react';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport './vapp.css';\nimport axios from 'axios';\nimport {Table} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Cell from \"./Cell\";\nimport {TETROMINOS} from '../tetrominos'\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [stop, setStop] = useState(true);\n  const [stopText, setStopText] = useState('Stop');\n  const [nextTermino, setnextTermino] = useState('');\n  const [gamer, setGamer] = useState((localStorage.getItem('gamer_tetris') == null)? '' : localStorage.getItem('gamer_tetris'));\n  const [start, setStart] = useState(false);\n  const [error, setError] = useState('');\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n  const [topUser, setTopUser]  = useState([]);\n\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      // Activate the interval again when user releases down arrow.\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1));\n      }\n    } else {\n      console.log(score, 'pont');\n    }\n  };\n\n  const startGame = () => {\n\n    // Reset everything\n    if(gamer !== '') {\n      setStage(createStage());\n      setDropTime(1000);\n      resetPlayer();\n      setScore(0);\n      setLevel(0);\n      setRows(0);\n      setStart(true);\n      setGameOver(false);\n      setError('');\n      axios.post(\"https://vmm.vector.hu/api/games/highscore/get\", {game: 'tetris'}, {\n        headers: {\n          \"Authorization\" : \"JjhFhwXh6SzbjyDHFRmkY5SC77M7qPS3aGJcfsWFzLxArvcAL9BX444PNzXGqgbHDm3NJMqGXTHcDLNKbV7U2EY59knXQhPxdpbWTmTapqZzCZXXYqJH4QBSpLHyV42CdHkesp3UytJ5CXrEHe3zpKhw45TddG8sUJ7Hf2Y5eb5VRkWcJfFUTmjebarHKrgKzU3y8fnjecuS4aBdcmpK2Rd45zQZgk7f8YgjwujhnxS5wJAMRNCFJwv5aBGT2wsY\"\n        }\n      }).then(response => {\n        setTopUser(response.data);\n      });\n      localStorage.setItem('gamer_tetris', gamer);\n    }else{\n      setError(\"ADD MEG a NEVED START ELOTT!\")\n    }\n  };\n\n  const drop = () => {\n    // Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      // Also increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n      setnextTermino(localStorage.getItem('nextTermino'))\n    } else {\n      // Game over!\n      if (player.pos.y < 1) {\n        setGameOver(true);\n        if(localStorage.getItem('topscore_tetris') == null)\n        {\n          localStorage.setItem('topscore_tetris', 0);\n        }\n\n        localStorage.setItem('topscore_tetris', score);\n        axios.post(\"https://vmm.vector.hu/api/games/highscore/add\", {game: 'tetris', name: gamer, score:score}, {\n          headers: {\n            \"Authorization\" : \"JjhFhwXh6SzbjyDHFRmkY5SC77M7qPS3aGJcfsWFzLxArvcAL9BX444PNzXGqgbHDm3NJMqGXTHcDLNKbV7U2EY59knXQhPxdpbWTmTapqZzCZXXYqJH4QBSpLHyV42CdHkesp3UytJ5CXrEHe3zpKhw45TddG8sUJ7Hf2Y5eb5VRkWcJfFUTmjebarHKrgKzU3y8fnjecuS4aBdcmpK2Rd45zQZgk7f8YgjwujhnxS5wJAMRNCFJwv5aBGT2wsY\"\n          }\n        })\n\n\n\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const dropPlayer = () => {\n    // We don't need to run the interval when we use the arrow down to\n    // move the tetromino downwards. So deactivate it for now.\n    setDropTime(null);\n    drop();\n  };\n\n  const stopGame = () =>{\n    setStop(!stop);\n    if(stop){\n      setStopText('Folytatas');\n    }else{\n      setStopText('Stop');\n    }\n  }\n\n  // This one starts the game\n  // Custom hook by Dan Abramov\n  useInterval(() => {\n    if(stop == true){\n      drop();\n    }\n  }, dropTime);\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if(stop == true) {\n        if (keyCode === 37) {\n          movePlayer(-1);\n        } else if (keyCode === 39) {\n          movePlayer(1);\n        } else if (keyCode === 40) {\n          dropPlayer();\n        } else if (keyCode === 38) {\n          playerRotate(stage, 1);\n        }\n      }\n    }\n  };\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={e => move(e)}\n      onKeyUp={keyUp}\n    >\n      <p className=\"center p-0\" style={{ color: '#10E2AA' }}>Vector Kft. - VAPPRIS V1.6</p>\n      <Table striped bordered hover className=\"max-w\" >\n        <thead>\n        <tr>\n          <th>Játékos</th>\n          <th>Pont</th>\n        </tr>\n        </thead>\n        <tbody>\n        {topUser.map(function (item, i) {\n          return (\n              <tr>\n                <td>\n                  {item.name}\n                </td>\n                <td>\n                  {item.score}\n                </td>\n              </tr>\n          )\n        })\n        }\n        </tbody>\n      </Table>\n    <StyledTetris>\n        <Stage stage={stage} />\n\n\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text={`Vege:${score}`} />\n          ) : (\n            <div>\n              <Display text={`Pont: ${score}`} />\n              <Display text={`Sor: ${rows}`} />\n              <Display text={`Szin: ${level}`} />\n              <Display text={<input className=\"gamer\" placeholder=\"IDE IRD a NEVED\" type=\"text\" value={gamer} disabled={start}  onChange={e => setGamer(e.target.value)}/>} />\n              <Display text={<div className={`nextTetrominos ${nextTermino}`}></div>} />\n\n\n            </div>\n          )}\n          {error !== '' ? <span className=\"error\" >{error}</span> : null}\n          <StartButton callback={startGame} />\n          <button className={`vapp-btn ${(stop == true ? 'error' : '')}`} onClick={stopGame} disabled={!start} >{stopText}</button>\n        </aside>\n\n      </StyledTetris>\n\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false\n  });\n\n  let termino = [];\n\n  let start = false;\n\n  function rotate(matrix, dir) {\n    // Make the rows to become cols (transpose)\n    const mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\n    // Reverse each row to get a rotaded matrix\n    if (dir > 0) return mtrx.map(row => row.reverse());\n    return mtrx.reverse();\n  }\n\n  function playerRotate(stage, dir) {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  }\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n\n    if(!start){\n      termino.push(randomTetromino().shape);\n      termino.push(randomTetromino().shape);\n      start = true;\n    }\n    else{\n      let newTerminoo = [];\n      newTerminoo.push(termino[1]);\n      newTerminoo.push(randomTetromino().shape)\n      termino = newTerminoo;\n    }\n\n    localStorage.setItem('nextTermino', termino[1][1][1]);\n\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: termino[0],\n      collided: false,\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // This is how original Tetris score is calculated\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}